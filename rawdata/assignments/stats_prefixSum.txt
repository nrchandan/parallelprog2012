Best performance on top.

==========================================================================================
ICPC compiler, No initialization of list, Using recursion until list reduces to length 4.

[chandan@LLVM ~]$ perf stat -e L1-dcache-loads -e L1-dcache-load-misses  -e LLC-loads -e LLC-load-misses -e cycles ./icpccacheoblivious 
Original list
Prefix sum list

 Performance counter stats for './icpccacheoblivious':

     1,685,133,476 L1-dcache-loads                                              [60.02%]
        51,997,078 L1-dcache-load-misses     #    3.09% of all L1-dcache hits   [80.02%]
         3,885,657 LLC-loads                                                    [80.01%]
         2,856,008 LLC-load-misses           #   73.50% of all LL-cache hits    [20.01%]
     3,691,509,110 cycles                    #    0.000 GHz                     [40.04%]

       1.126558964 seconds time elapsed


==========================================================================================
ICPC compiler, No initialization of list, Using recursion until list reduces to length 2.

[chandan@LLVM ~]$ perf stat -e L1-dcache-loads -e L1-dcache-load-misses  -e LLC-loads -e LLC-load-misses -e cycles ./icpccacheoblivious 
Original list
Prefix sum list

 Performance counter stats for './icpccacheoblivious':

     2,498,596,752 L1-dcache-loads                                              [60.02%]
        51,782,301 L1-dcache-load-misses     #    2.07% of all L1-dcache hits   [80.01%]
         4,179,546 LLC-loads                                                    [79.99%]
         2,865,513 LLC-load-misses           #   68.56% of all LL-cache hits    [20.02%]
     5,396,523,045 cycles                    #    0.000 GHz                     [40.02%]

       1.640977739 seconds time elapsed


==========================================================================================
GCC compiler, No initilization, Using recursion until list reduces to length 4:

[chandan@LLVM ~]$ !g
gcc prefixSum.c -o cacheoblivious
[chandan@LLVM ~]$ perf stat -e L1-dcache-loads -e L1-dcache-load-misses  -e LLC-loads -e LLC-load-misses -e cycles ./cacheoblivious 
Original list
Prefix sum list

 Performance counter stats for './cacheoblivious':

     6,387,933,760 L1-dcache-loads                                              [60.00%]
        52,078,913 L1-dcache-load-misses     #    0.82% of all L1-dcache hits   [80.00%]
         4,270,368 LLC-loads                                                    [80.00%]
         3,027,414 LLC-load-misses           #   70.89% of all LL-cache hits    [20.01%]
     9,415,516,874 cycles                    #    0.000 GHz                     [40.01%]

       2.860940844 seconds time elapsed


==========================================================================================
GCC compiler, No initialization, Using recursion until list reduces to length 2:

[chandan@LLVM ~]$ !g
gcc prefixSum.c -o cacheoblivious
[chandan@LLVM ~]$ perf stat -e L1-dcache-loads -e L1-dcache-load-misses  -e LLC-loads -e LLC-load-misses -e cycles ./cacheoblivious 
Original list
Prefix sum list

 Performance counter stats for './cacheoblivious':

     8,194,200,341 L1-dcache-loads                                              [60.01%]
        52,253,460 L1-dcache-load-misses     #    0.64% of all L1-dcache hits   [80.01%]
         4,497,761 LLC-loads                                                    [80.01%]
         2,974,895 LLC-load-misses           #   66.14% of all LL-cache hits    [19.99%]
    11,951,437,240 cycles                    #    0.000 GHz                     [40.01%]

       3.632716117 seconds time elapsed



